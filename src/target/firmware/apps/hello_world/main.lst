   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.fb_putstr,"ax",%progbits
  17              		.align	2
  19              	fb_putstr:
  20              	.LFB53:
  21              		.file 1 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  35:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  36:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  37:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  38:include/fb/framebuffer.h **** 
  39:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  40:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  41:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  42:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  43:include/fb/framebuffer.h **** };
  44:include/fb/framebuffer.h **** 
  45:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  46:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  47:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  48:include/fb/framebuffer.h **** 
  49:include/fb/framebuffer.h **** static inline void
  50:include/fb/framebuffer.h **** fb_init(){
  51:include/fb/framebuffer.h **** 	framebuffer->init();
  52:include/fb/framebuffer.h **** }
  53:include/fb/framebuffer.h **** 
  54:include/fb/framebuffer.h **** static inline void
  55:include/fb/framebuffer.h **** fb_clear(){
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
  57:include/fb/framebuffer.h **** }
  58:include/fb/framebuffer.h **** 
  59:include/fb/framebuffer.h **** static inline void
  60:include/fb/framebuffer.h **** fb_boxto(uint16_t x,uint16_t y){
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
  62:include/fb/framebuffer.h **** }
  63:include/fb/framebuffer.h **** 
  64:include/fb/framebuffer.h **** static inline void
  65:include/fb/framebuffer.h **** fb_lineto(uint16_t x,uint16_t y){
  66:include/fb/framebuffer.h **** 	framebuffer->lineto(x,y);
  67:include/fb/framebuffer.h **** }
  68:include/fb/framebuffer.h **** 
  69:include/fb/framebuffer.h **** static inline int
  70:include/fb/framebuffer.h **** fb_putstr(char *str,int maxwidth){
  22              		.loc 1 70 0
  23              		.cfi_startproc
  24              		@ Function supports interworking.
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27              	.LVL0:
  28 0000 08402DE9 		stmfd	sp!, {r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  71:include/fb/framebuffer.h **** 	return framebuffer->putstr(str,maxwidth);
  33              		.loc 1 71 0
  34 0004 14309FE5 		ldr	r3, .L2
  35 0008 003093E5 		ldr	r3, [r3]
  36 000c 18C093E5 		ldr	ip, [r3, #24]
  37 0010 0FE0A0E1 		mov	lr, pc
  38 0014 1CFF2FE1 		bx	ip
  39              	.LVL1:
  72:include/fb/framebuffer.h **** }
  40              		.loc 1 72 0
  41 0018 0840BDE8 		ldmfd	sp!, {r3, lr}
  42 001c 1EFF2FE1 		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0020 00000000 		.word	framebuffer
  47              		.cfi_endproc
  48              	.LFE53:
  50              		.section	.text.key_handler,"ax",%progbits
  51              		.align	2
  52              		.global	key_handler
  54              	key_handler:
  55              	.LFB65:
  56              		.file 2 "apps/hello_world/main.c"
   1:apps/hello_world/main.c **** /* main program of Free Software for Calypso Phone */
   2:apps/hello_world/main.c **** 
   3:apps/hello_world/main.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:apps/hello_world/main.c ****  *
   5:apps/hello_world/main.c ****  * All Rights Reserved
   6:apps/hello_world/main.c ****  *
   7:apps/hello_world/main.c ****  * This program is free software; you can redistribute it and/or modify
   8:apps/hello_world/main.c ****  * it under the terms of the GNU General Public License as published by
   9:apps/hello_world/main.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:apps/hello_world/main.c ****  * (at your option) any later version.
  11:apps/hello_world/main.c ****  *
  12:apps/hello_world/main.c ****  * This program is distributed in the hope that it will be useful,
  13:apps/hello_world/main.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:apps/hello_world/main.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:apps/hello_world/main.c ****  * GNU General Public License for more details.
  16:apps/hello_world/main.c ****  *
  17:apps/hello_world/main.c ****  * You should have received a copy of the GNU General Public License along
  18:apps/hello_world/main.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:apps/hello_world/main.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:apps/hello_world/main.c ****  *
  21:apps/hello_world/main.c ****  */
  22:apps/hello_world/main.c **** 
  23:apps/hello_world/main.c **** #include <stdint.h>
  24:apps/hello_world/main.c **** #include <stdio.h>
  25:apps/hello_world/main.c **** #include <string.h>
  26:apps/hello_world/main.c **** 
  27:apps/hello_world/main.c **** #include <debug.h>
  28:apps/hello_world/main.c **** #include <memory.h>
  29:apps/hello_world/main.c **** #include <delay.h>
  30:apps/hello_world/main.c **** #include <rffe.h>
  31:apps/hello_world/main.c **** #include <keypad.h>
  32:apps/hello_world/main.c **** #include <board.h>
  33:apps/hello_world/main.c **** #include <abb/twl3025.h>
  34:apps/hello_world/main.c **** #include <rf/trf6151.h>
  35:apps/hello_world/main.c **** #include <calypso/clock.h>
  36:apps/hello_world/main.c **** #include <calypso/tpu.h>
  37:apps/hello_world/main.c **** #include <calypso/tsp.h>
  38:apps/hello_world/main.c **** #include <calypso/dsp.h>
  39:apps/hello_world/main.c **** #include <calypso/irq.h>
  40:apps/hello_world/main.c **** #include <calypso/misc.h>
  41:apps/hello_world/main.c **** #include <comm/sercomm.h>
  42:apps/hello_world/main.c **** #include <comm/timer.h>
  43:apps/hello_world/main.c **** #include <fb/framebuffer.h>
  44:apps/hello_world/main.c **** #include <battery/battery.h>
  45:apps/hello_world/main.c **** 
  46:apps/hello_world/main.c **** /* Main Program */
  47:apps/hello_world/main.c **** const char *hr = "======================================================================\n";
  48:apps/hello_world/main.c **** 
  49:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state);
  50:apps/hello_world/main.c **** 
  51:apps/hello_world/main.c **** static void console_rx_cb(uint8_t dlci, struct msgb *msg)
  52:apps/hello_world/main.c **** {
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
  55:apps/hello_world/main.c **** 		return;
  56:apps/hello_world/main.c **** 	}
  57:apps/hello_world/main.c **** 
  58:apps/hello_world/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
  59:apps/hello_world/main.c **** 	msgb_free(msg);
  60:apps/hello_world/main.c **** }
  61:apps/hello_world/main.c **** 
  62:apps/hello_world/main.c **** static void l1a_l23_rx_cb(uint8_t dlci, struct msgb *msg)
  63:apps/hello_world/main.c **** {
  64:apps/hello_world/main.c **** 	int i;
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
  67:apps/hello_world/main.c **** 		printf("%02x ", msg->data[i]);
  68:apps/hello_world/main.c **** 	puts("\n");
  69:apps/hello_world/main.c **** }
  70:apps/hello_world/main.c **** 
  71:apps/hello_world/main.c **** void
  72:apps/hello_world/main.c **** write_battery_info(void *p){
  73:apps/hello_world/main.c **** 	char buf[128];
  74:apps/hello_world/main.c **** 
  75:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
  76:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_C64);
  77:apps/hello_world/main.c **** 
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
  79:apps/hello_world/main.c **** 	fb_gotoxy(8,41);
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  81:apps/hello_world/main.c **** 
  82:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"C: %04d mV",battery_info.charger_volt_mV);
  83:apps/hello_world/main.c **** 	fb_gotoxy(8,49);
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  85:apps/hello_world/main.c **** 
  86:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"F: %08x",battery_info.flags);
  87:apps/hello_world/main.c **** 	fb_gotoxy(8,57);
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  89:apps/hello_world/main.c **** 
  90:apps/hello_world/main.c **** 	fb_flush();
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
  92:apps/hello_world/main.c **** 
  93:apps/hello_world/main.c **** }
  94:apps/hello_world/main.c **** 
  95:apps/hello_world/main.c **** /* timer that fires the charging loop regularly */
  96:apps/hello_world/main.c **** static struct osmo_timer_list write_battery_info_timer = {
  97:apps/hello_world/main.c **** 	.cb = &write_battery_info,
  98:apps/hello_world/main.c **** 	.data = &write_battery_info_timer
  99:apps/hello_world/main.c **** };
 100:apps/hello_world/main.c **** 
 101:apps/hello_world/main.c **** int main(void)
 102:apps/hello_world/main.c **** {
 103:apps/hello_world/main.c **** 	board_init(1);
 104:apps/hello_world/main.c **** 
 105:apps/hello_world/main.c **** 	puts("\n\nVADIMBETMAN Hello World (revision " GIT_REVISION ")\n");
 106:apps/hello_world/main.c **** 	puts(hr);
 107:apps/hello_world/main.c **** 
 108:apps/hello_world/main.c **** 	/* Dump device identification */
 109:apps/hello_world/main.c **** 	dump_dev_id();
 110:apps/hello_world/main.c **** 	puts(hr);
 111:apps/hello_world/main.c **** 
 112:apps/hello_world/main.c **** 	/* Dump clock config before PLL set */
 113:apps/hello_world/main.c **** 	calypso_clk_dump();
 114:apps/hello_world/main.c **** 	puts(hr);
 115:apps/hello_world/main.c **** 
 116:apps/hello_world/main.c **** 	keypad_set_handler(&key_handler);
 117:apps/hello_world/main.c **** 
 118:apps/hello_world/main.c **** 	/* Dump clock config after PLL set */
 119:apps/hello_world/main.c **** 	calypso_clk_dump();
 120:apps/hello_world/main.c **** 	puts(hr);
 121:apps/hello_world/main.c **** 
 122:apps/hello_world/main.c **** 	fb_clear();
 123:apps/hello_world/main.c **** 
 124:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_BLACK);
 125:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_WHITE);
 126:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVB14);
 127:apps/hello_world/main.c **** 
 128:apps/hello_world/main.c **** 	fb_gotoxy(2,20);
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 130:apps/hello_world/main.c **** 
 131:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_RED);
 132:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_BLUE);
 133:apps/hello_world/main.c **** 
 134:apps/hello_world/main.c **** 	fb_gotoxy(2,25);
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 136:apps/hello_world/main.c **** 
 137:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
 138:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVR08);
 139:apps/hello_world/main.c **** 	fb_gotoxy(8,33);
 140:apps/hello_world/main.c **** 	fb_putstr("vadimbetman",framebuffer->width-4);
 141:apps/hello_world/main.c **** 
 142:apps/hello_world/main.c **** 	fb_flush();
 143:apps/hello_world/main.c **** 
 144:apps/hello_world/main.c **** 
 145:apps/hello_world/main.c **** 
 146:apps/hello_world/main.c **** 	/* Dump all memory */
 147:apps/hello_world/main.c **** 	//dump_mem();
 148:apps/hello_world/main.c **** #if 0
 149:apps/hello_world/main.c **** 	/* Dump Bootloader */
 150:apps/hello_world/main.c **** 	memdump_range((void *)0x00000000, 0x2000);
 151:apps/hello_world/main.c **** 	puts(hr);
 152:apps/hello_world/main.c **** #endif
 153:apps/hello_world/main.c **** 
 154:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 155:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 156:apps/hello_world/main.c **** 
 157:apps/hello_world/main.c **** 	osmo_timer_schedule(&write_battery_info_timer,100);
 158:apps/hello_world/main.c **** 
 159:apps/hello_world/main.c **** 	/* beyond this point we only react to interrupts */
 160:apps/hello_world/main.c **** 	puts("entering interrupt loop\n");
 161:apps/hello_world/main.c **** 	while (1) {
 162:apps/hello_world/main.c **** 		osmo_timers_update();
 163:apps/hello_world/main.c **** 	}
 164:apps/hello_world/main.c **** 
 165:apps/hello_world/main.c **** 	twl3025_power_off();
 166:apps/hello_world/main.c **** 
 167:apps/hello_world/main.c **** 	while (1) {}
 168:apps/hello_world/main.c **** }
 169:apps/hello_world/main.c **** 
 170:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state)
 171:apps/hello_world/main.c **** {
  57              		.loc 2 171 0
  58              		.cfi_startproc
  59              		@ Function supports interworking.
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL2:
  64 0000 1EFF2FE1 		bx	lr
  65              		.cfi_endproc
  66              	.LFE65:
  68              		.section	.text.l1a_l23_rx_cb,"ax",%progbits
  69              		.align	2
  71              	l1a_l23_rx_cb:
  72              	.LFB62:
  63:apps/hello_world/main.c **** {
  73              		.loc 2 63 0
  74              		.cfi_startproc
  75              		@ Function supports interworking.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL3:
  63:apps/hello_world/main.c **** {
  79              		.loc 2 63 0
  80 0000 38402DE9 		stmfd	sp!, {r3, r4, r5, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 3, -16
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 5, -8
  86              		.cfi_offset 14, -4
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
  87              		.loc 2 65 0
  88 0004 3C009FE5 		ldr	r0, .L10
  89              	.LVL4:
  63:apps/hello_world/main.c **** {
  90              		.loc 2 63 0
  91 0008 0150A0E1 		mov	r5, r1
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
  92              		.loc 2 65 0
  93 000c FEFFFFEB 		bl	puts
  94              	.LVL5:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
  95              		.loc 2 66 0
  96 0010 0040A0E3 		mov	r4, #0
  97              	.LVL6:
  98              	.L6:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
  99              		.loc 2 66 0 is_stmt 0 discriminator 1
 100 0014 B633D5E1 		ldrh	r3, [r5, #54]
 101 0018 030054E1 		cmp	r4, r3
 102 001c 050000AA 		bge	.L9
  67:apps/hello_world/main.c **** 		printf("%02x ", msg->data[i]);
 103              		.loc 2 67 0 is_stmt 1 discriminator 2
 104 0020 403095E5 		ldr	r3, [r5, #64]
 105 0024 20009FE5 		ldr	r0, .L10+4
 106 0028 0410D3E7 		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 107 002c FEFFFFEB 		bl	printf
 108              	.LVL7:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
 109              		.loc 2 66 0 discriminator 2
 110 0030 014084E2 		add	r4, r4, #1
 111              	.LVL8:
 112 0034 F6FFFFEA 		b	.L6
 113              	.L9:
  68:apps/hello_world/main.c **** 	puts("\n");
 114              		.loc 2 68 0
 115 0038 10009FE5 		ldr	r0, .L10+8
 116 003c FEFFFFEB 		bl	puts
 117              	.LVL9:
  69:apps/hello_world/main.c **** }
 118              		.loc 2 69 0
 119 0040 3840BDE8 		ldmfd	sp!, {r3, r4, r5, lr}
 120              	.LVL10:
 121 0044 1EFF2FE1 		bx	lr
 122              	.L11:
 123              		.align	2
 124              	.L10:
 125 0048 00000000 		.word	.LC0
 126 004c 10000000 		.word	.LC1
 127 0050 16000000 		.word	.LC2
 128              		.cfi_endproc
 129              	.LFE62:
 131              		.section	.text.console_rx_cb,"ax",%progbits
 132              		.align	2
 134              	console_rx_cb:
 135              	.LFB61:
  52:apps/hello_world/main.c **** {
 136              		.loc 2 52 0
 137              		.cfi_startproc
 138              		@ Function supports interworking.
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL11:
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
 142              		.loc 2 53 0
 143 0000 0A0050E3 		cmp	r0, #10
  52:apps/hello_world/main.c **** {
 144              		.loc 2 52 0
 145 0004 10402DE9 		stmfd	sp!, {r4, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
  52:apps/hello_world/main.c **** {
 150              		.loc 2 52 0
 151 0008 0030A0E1 		mov	r3, r0
 152 000c 0140A0E1 		mov	r4, r1
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
 153              		.loc 2 53 0
 154 0010 0300000A 		beq	.L13
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
 155              		.loc 2 54 0
 156 0014 0310A0E1 		mov	r1, r3
 157              	.LVL12:
 158 0018 20009FE5 		ldr	r0, .L15
 159              	.LVL13:
 160 001c FEFFFFEB 		bl	printf
 161              	.LVL14:
  55:apps/hello_world/main.c **** 		return;
 162              		.loc 2 55 0
 163 0020 040000EA 		b	.L12
 164              	.LVL15:
 165              	.L13:
 166              	.LBB34:
 167              	.LBB35:
  58:apps/hello_world/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
 168              		.loc 2 58 0
 169 0024 18009FE5 		ldr	r0, .L15+4
 170              	.LVL16:
 171 0028 401091E5 		ldr	r1, [r1, #64]
 172              	.LVL17:
 173 002c FEFFFFEB 		bl	printf
 174              	.LVL18:
  59:apps/hello_world/main.c **** 	msgb_free(msg);
 175              		.loc 2 59 0
 176 0030 0400A0E1 		mov	r0, r4
 177 0034 FEFFFFEB 		bl	msgb_free
 178              	.LVL19:
 179              	.L12:
 180              	.LBE35:
 181              	.LBE34:
  60:apps/hello_world/main.c **** }
 182              		.loc 2 60 0
 183 0038 1040BDE8 		ldmfd	sp!, {r4, lr}
 184              	.LVL20:
 185 003c 1EFF2FE1 		bx	lr
 186              	.L16:
 187              		.align	2
 188              	.L15:
 189 0040 18000000 		.word	.LC3
 190 0044 35000000 		.word	.LC4
 191              		.cfi_endproc
 192              	.LFE61:
 194              		.section	.text.write_battery_info,"ax",%progbits
 195              		.align	2
 196              		.global	write_battery_info
 198              	write_battery_info:
 199              	.LFB63:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 200              		.loc 2 72 0
 201              		.cfi_startproc
 202              		@ Function supports interworking.
 203              		@ args = 0, pretend = 0, frame = 128
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL21:
 206 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 20
 209              		.cfi_offset 4, -20
 210              		.cfi_offset 5, -16
 211              		.cfi_offset 6, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214              	.LBB48:
 215              	.LBB49:
  73:include/fb/framebuffer.h **** 
  74:include/fb/framebuffer.h **** static inline void
  75:include/fb/framebuffer.h **** fb_flush(){
  76:include/fb/framebuffer.h **** 	framebuffer->flush();
  77:include/fb/framebuffer.h **** }
  78:include/fb/framebuffer.h **** 
  79:include/fb/framebuffer.h **** static inline void
  80:include/fb/framebuffer.h **** fb_gotoxy(uint16_t x,uint16_t y){
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
  83:include/fb/framebuffer.h **** }
  84:include/fb/framebuffer.h **** 
  85:include/fb/framebuffer.h **** static inline void
  86:include/fb/framebuffer.h **** fb_setfg(uint32_t color){
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 216              		.loc 1 87 0
 217 0004 E4409FE5 		ldr	r4, .L18
 218 0008 003094E5 		ldr	r3, [r4]
 219              	.LBE49:
 220              	.LBE48:
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
 221              		.loc 2 78 0
 222 000c E0609FE5 		ldr	r6, .L18+4
 223              	.LBB52:
 224              	.LBB50:
 225              		.loc 1 87 0
 226 0010 FF24E0E3 		mvn	r2, #-16777216
 227              	.LBE50:
 228              	.LBE52:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 229              		.loc 2 72 0
 230 0014 84D04DE2 		sub	sp, sp, #132
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 152
 233              	.LBB53:
 234              	.LBB51:
 235              		.loc 1 87 0
 236 0018 282083E5 		str	r2, [r3, #40]
 237              	.LVL22:
 238              	.LBE51:
 239              	.LBE53:
 240              	.LBB54:
 241              	.LBB55:
  88:include/fb/framebuffer.h **** }
  89:include/fb/framebuffer.h **** 
  90:include/fb/framebuffer.h **** static inline void
  91:include/fb/framebuffer.h **** fb_setbg(uint32_t color){
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
  93:include/fb/framebuffer.h **** }
  94:include/fb/framebuffer.h **** 
  95:include/fb/framebuffer.h **** static inline void
  96:include/fb/framebuffer.h **** fb_setfont(enum fb_font_id fid){
  97:include/fb/framebuffer.h **** 	framebuffer->font = fid;
 242              		.loc 1 97 0
 243 001c 0220A0E3 		mov	r2, #2
 244              	.LBE55:
 245              	.LBE54:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 246              		.loc 2 72 0
 247 0020 0070A0E1 		mov	r7, r0
 248              	.LBB57:
 249              	.LBB56:
 250              		.loc 1 97 0
 251 0024 3020C3E5 		strb	r2, [r3, #48]
 252              	.LBE56:
 253              	.LBE57:
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
 254              		.loc 2 78 0
 255 0028 0D00A0E1 		mov	r0, sp
 256              	.LVL23:
 257 002c 083096E5 		ldr	r3, [r6, #8]
 258 0030 8010A0E3 		mov	r1, #128
 259 0034 BC209FE5 		ldr	r2, .L18+8
 260 0038 FEFFFFEB 		bl	snprintf
 261              	.LVL24:
 262              	.LBB58:
 263              	.LBB59:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 264              		.loc 1 81 0
 265 003c 003094E5 		ldr	r3, [r4]
 266              	.LBE59:
 267              	.LBE58:
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 268              		.loc 2 80 0
 269 0040 B012D3E1 		ldrh	r1, [r3, #32]
 270              	.LBB61:
 271              	.LBB60:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 272              		.loc 1 81 0
 273 0044 0850A0E3 		mov	r5, #8
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 274              		.loc 1 82 0
 275 0048 2920A0E3 		mov	r2, #41
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 276              		.loc 1 81 0
 277 004c B452C3E1 		strh	r5, [r3, #36]	@ movhi
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 278              		.loc 1 82 0
 279 0050 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 280              	.LBE60:
 281              	.LBE61:
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 282              		.loc 2 80 0
 283 0054 0D00A0E1 		mov	r0, sp
 284 0058 081041E2 		sub	r1, r1, #8
 285 005c FEFFFFEB 		bl	fb_putstr
 286              	.LVL25:
  82:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"C: %04d mV",battery_info.charger_volt_mV);
 287              		.loc 2 82 0
 288 0060 043096E5 		ldr	r3, [r6, #4]
 289 0064 0D00A0E1 		mov	r0, sp
 290 0068 8010A0E3 		mov	r1, #128
 291 006c 88209FE5 		ldr	r2, .L18+12
 292 0070 FEFFFFEB 		bl	snprintf
 293              	.LVL26:
 294              	.LBB62:
 295              	.LBB63:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 296              		.loc 1 81 0
 297 0074 003094E5 		ldr	r3, [r4]
 298              	.LBE63:
 299              	.LBE62:
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 300              		.loc 2 84 0
 301 0078 B012D3E1 		ldrh	r1, [r3, #32]
 302              	.LBB65:
 303              	.LBB64:
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 304              		.loc 1 82 0
 305 007c 3120A0E3 		mov	r2, #49
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 306              		.loc 1 81 0
 307 0080 B452C3E1 		strh	r5, [r3, #36]	@ movhi
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 308              		.loc 1 82 0
 309 0084 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 310              	.LBE64:
 311              	.LBE65:
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 312              		.loc 2 84 0
 313 0088 0D00A0E1 		mov	r0, sp
 314 008c 081041E2 		sub	r1, r1, #8
 315 0090 FEFFFFEB 		bl	fb_putstr
 316              	.LVL27:
  86:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"F: %08x",battery_info.flags);
 317              		.loc 2 86 0
 318 0094 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 319 0098 0D00A0E1 		mov	r0, sp
 320 009c 8010A0E3 		mov	r1, #128
 321 00a0 58209FE5 		ldr	r2, .L18+16
 322 00a4 FEFFFFEB 		bl	snprintf
 323              	.LVL28:
 324              	.LBB66:
 325              	.LBB67:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 326              		.loc 1 81 0
 327 00a8 003094E5 		ldr	r3, [r4]
 328              	.LBE67:
 329              	.LBE66:
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 330              		.loc 2 88 0
 331 00ac B012D3E1 		ldrh	r1, [r3, #32]
 332              	.LBB69:
 333              	.LBB68:
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 334              		.loc 1 82 0
 335 00b0 3920A0E3 		mov	r2, #57
 336 00b4 B622C3E1 		strh	r2, [r3, #38]	@ movhi
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 337              		.loc 1 81 0
 338 00b8 B452C3E1 		strh	r5, [r3, #36]	@ movhi
 339              	.LBE68:
 340              	.LBE69:
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 341              		.loc 2 88 0
 342 00bc 081041E2 		sub	r1, r1, #8
 343 00c0 0D00A0E1 		mov	r0, sp
 344 00c4 FEFFFFEB 		bl	fb_putstr
 345              	.LVL29:
 346              	.LBB70:
 347              	.LBB71:
  76:include/fb/framebuffer.h **** 	framebuffer->flush();
 348              		.loc 1 76 0
 349 00c8 003094E5 		ldr	r3, [r4]
 350 00cc 1CC093E5 		ldr	ip, [r3, #28]
 351 00d0 0FE0A0E1 		mov	lr, pc
 352 00d4 1CFF2FE1 		bx	ip
 353              	.LVL30:
 354              	.LBE71:
 355              	.LBE70:
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
 356              		.loc 2 91 0
 357 00d8 0700A0E1 		mov	r0, r7
 358 00dc 6410A0E3 		mov	r1, #100
 359 00e0 FEFFFFEB 		bl	osmo_timer_schedule
 360              	.LVL31:
  93:apps/hello_world/main.c **** }
 361              		.loc 2 93 0
 362 00e4 84D08DE2 		add	sp, sp, #132
 363              		@ sp needed
 364 00e8 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 365              	.LVL32:
 366 00ec 1EFF2FE1 		bx	lr
 367              	.L19:
 368              		.align	2
 369              	.L18:
 370 00f0 00000000 		.word	framebuffer
 371 00f4 00000000 		.word	battery_info
 372 00f8 54000000 		.word	.LC5
 373 00fc 5F000000 		.word	.LC6
 374 0100 6A000000 		.word	.LC7
 375              		.cfi_endproc
 376              	.LFE63:
 378              		.section	.text.startup.main,"ax",%progbits
 379              		.align	2
 380              		.global	main
 382              	main:
 383              	.LFB64:
 102:apps/hello_world/main.c **** {
 384              		.loc 2 102 0
 385              		.cfi_startproc
 386              		@ Function supports interworking.
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 390              	.LCFI5:
 391              		.cfi_def_cfa_offset 24
 392              		.cfi_offset 4, -24
 393              		.cfi_offset 5, -20
 394              		.cfi_offset 6, -16
 395              		.cfi_offset 7, -12
 396              		.cfi_offset 8, -8
 397              		.cfi_offset 14, -4
 103:apps/hello_world/main.c **** 	board_init(1);
 398              		.loc 2 103 0
 399 0004 0100A0E3 		mov	r0, #1
 106:apps/hello_world/main.c **** 	puts(hr);
 400              		.loc 2 106 0
 401 0008 3C419FE5 		ldr	r4, .L22
 103:apps/hello_world/main.c **** 	board_init(1);
 402              		.loc 2 103 0
 403 000c FEFFFFEB 		bl	board_init
 404              	.LVL33:
 105:apps/hello_world/main.c **** 	puts("\n\nVADIMBETMAN Hello World (revision " GIT_REVISION ")\n");
 405              		.loc 2 105 0
 406 0010 38019FE5 		ldr	r0, .L22+4
 407 0014 FEFFFFEB 		bl	puts
 408              	.LVL34:
 106:apps/hello_world/main.c **** 	puts(hr);
 409              		.loc 2 106 0
 410 0018 000094E5 		ldr	r0, [r4]
 411 001c FEFFFFEB 		bl	puts
 412              	.LVL35:
 109:apps/hello_world/main.c **** 	dump_dev_id();
 413              		.loc 2 109 0
 414 0020 FEFFFFEB 		bl	dump_dev_id
 415              	.LVL36:
 110:apps/hello_world/main.c **** 	puts(hr);
 416              		.loc 2 110 0
 417 0024 000094E5 		ldr	r0, [r4]
 418 0028 FEFFFFEB 		bl	puts
 419              	.LVL37:
 113:apps/hello_world/main.c **** 	calypso_clk_dump();
 420              		.loc 2 113 0
 421 002c FEFFFFEB 		bl	calypso_clk_dump
 422              	.LVL38:
 114:apps/hello_world/main.c **** 	puts(hr);
 423              		.loc 2 114 0
 424 0030 000094E5 		ldr	r0, [r4]
 425 0034 FEFFFFEB 		bl	puts
 426              	.LVL39:
 427              	.LBB98:
 428              	.LBB99:
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
 429              		.loc 1 56 0
 430 0038 14519FE5 		ldr	r5, .L22+8
 431              	.LBE99:
 432              	.LBE98:
 116:apps/hello_world/main.c **** 	keypad_set_handler(&key_handler);
 433              		.loc 2 116 0
 434 003c 14019FE5 		ldr	r0, .L22+12
 435 0040 FEFFFFEB 		bl	keypad_set_handler
 436              	.LVL40:
 119:apps/hello_world/main.c **** 	calypso_clk_dump();
 437              		.loc 2 119 0
 438 0044 FEFFFFEB 		bl	calypso_clk_dump
 439              	.LVL41:
 120:apps/hello_world/main.c **** 	puts(hr);
 440              		.loc 2 120 0
 441 0048 000094E5 		ldr	r0, [r4]
 442 004c FEFFFFEB 		bl	puts
 443              	.LVL42:
 444              	.LBB101:
 445              	.LBB100:
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
 446              		.loc 1 56 0
 447 0050 003095E5 		ldr	r3, [r5]
 448 0054 0CC093E5 		ldr	ip, [r3, #12]
 449 0058 0FE0A0E1 		mov	lr, pc
 450 005c 1CFF2FE1 		bx	ip
 451              	.LVL43:
 452              	.LBE100:
 453              	.LBE101:
 454              	.LBB102:
 455              	.LBB103:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 456              		.loc 1 87 0
 457 0060 003095E5 		ldr	r3, [r5]
 458              	.LBE103:
 459              	.LBE102:
 460              	.LBB106:
 461              	.LBB107:
 462              		.loc 1 97 0
 463 0064 0120A0E3 		mov	r2, #1
 464              	.LBE107:
 465              	.LBE106:
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 466              		.loc 2 129 0
 467 0068 B012D3E1 		ldrh	r1, [r3, #32]
 468              	.LBB109:
 469              	.LBB108:
 470              		.loc 1 97 0
 471 006c 3020C3E5 		strb	r2, [r3, #48]
 472              	.LBE108:
 473              	.LBE109:
 474              	.LBB110:
 475              	.LBB104:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 476              		.loc 1 87 0
 477 0070 0060A0E3 		mov	r6, #0
 478              	.LBE104:
 479              	.LBE110:
 480              	.LBB111:
 481              	.LBB112:
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 482              		.loc 1 82 0
 483 0074 1420A0E3 		mov	r2, #20
 484              	.LBE112:
 485              	.LBE111:
 486              	.LBB115:
 487              	.LBB116:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 488              		.loc 1 92 0
 489 0078 FF74E0E3 		mvn	r7, #-16777216
 490              	.LBE116:
 491              	.LBE115:
 492              	.LBB118:
 493              	.LBB113:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 494              		.loc 1 81 0
 495 007c 0280A0E3 		mov	r8, #2
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 496              		.loc 1 82 0
 497 0080 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 498              	.LBE113:
 499              	.LBE118:
 500              	.LBB119:
 501              	.LBB105:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 502              		.loc 1 87 0
 503 0084 286083E5 		str	r6, [r3, #40]
 504              	.LVL44:
 505              	.LBE105:
 506              	.LBE119:
 507              	.LBB120:
 508              	.LBB117:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 509              		.loc 1 92 0
 510 0088 2C7083E5 		str	r7, [r3, #44]
 511              	.LVL45:
 512              	.LBE117:
 513              	.LBE120:
 514              	.LBB121:
 515              	.LBB114:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 516              		.loc 1 81 0
 517 008c B482C3E1 		strh	r8, [r3, #36]	@ movhi
 518              	.LBE114:
 519              	.LBE121:
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 520              		.loc 2 129 0
 521 0090 041041E2 		sub	r1, r1, #4
 522 0094 C0009FE5 		ldr	r0, .L22+16
 523 0098 FEFFFFEB 		bl	fb_putstr
 524              	.LVL46:
 525              	.LBB122:
 526              	.LBB123:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 527              		.loc 1 87 0
 528 009c 003095E5 		ldr	r3, [r5]
 529              	.LBE123:
 530              	.LBE122:
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 531              		.loc 2 135 0
 532 00a0 B002D3E1 		ldrh	r0, [r3, #32]
 533              	.LBB125:
 534              	.LBB124:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 535              		.loc 1 87 0
 536 00a4 FF28A0E3 		mov	r2, #16711680
 537 00a8 282083E5 		str	r2, [r3, #40]
 538              	.LVL47:
 539              	.LBE124:
 540              	.LBE125:
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 541              		.loc 2 135 0
 542 00ac 030040E2 		sub	r0, r0, #3
 543              	.LBB126:
 544              	.LBB127:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 545              		.loc 1 92 0
 546 00b0 FF20A0E3 		mov	r2, #255
 547 00b4 2C2083E5 		str	r2, [r3, #44]
 548              	.LVL48:
 549              	.LBE127:
 550              	.LBE126:
 551              	.LBB128:
 552              	.LBB129:
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
 553              		.loc 1 61 0
 554 00b8 0008A0E1 		mov	r0, r0, asl #16
 555              	.LBE129:
 556              	.LBE128:
 557              	.LBB131:
 558              	.LBB132:
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 559              		.loc 1 82 0
 560 00bc 1920A0E3 		mov	r2, #25
 561 00c0 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 562              	.LVL49:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 563              		.loc 1 81 0
 564 00c4 B482C3E1 		strh	r8, [r3, #36]	@ movhi
 565              	.LBE132:
 566              	.LBE131:
 567              	.LBB133:
 568              	.LBB130:
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
 569              		.loc 1 61 0
 570 00c8 2008A0E1 		mov	r0, r0, lsr #16
 571 00cc 2610A0E3 		mov	r1, #38
 572 00d0 10C093E5 		ldr	ip, [r3, #16]
 573 00d4 0FE0A0E1 		mov	lr, pc
 574 00d8 1CFF2FE1 		bx	ip
 575              	.LVL50:
 576              	.LBE130:
 577              	.LBE133:
 578              	.LBB134:
 579              	.LBB135:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 580              		.loc 1 87 0
 581 00dc 003095E5 		ldr	r3, [r5]
 582              	.LBE135:
 583              	.LBE134:
 584              	.LBB137:
 585              	.LBB138:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 586              		.loc 1 81 0
 587 00e0 0820A0E3 		mov	r2, #8
 588              	.LBE138:
 589              	.LBE137:
 140:apps/hello_world/main.c **** 	fb_putstr("vadimbetman",framebuffer->width-4);
 590              		.loc 2 140 0
 591 00e4 B012D3E1 		ldrh	r1, [r3, #32]
 592              	.LBB140:
 593              	.LBB139:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
 594              		.loc 1 81 0
 595 00e8 B422C3E1 		strh	r2, [r3, #36]	@ movhi
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 596              		.loc 1 82 0
 597 00ec 2120A0E3 		mov	r2, #33
 598 00f0 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 599              	.LBE139:
 600              	.LBE140:
 140:apps/hello_world/main.c **** 	fb_putstr("vadimbetman",framebuffer->width-4);
 601              		.loc 2 140 0
 602 00f4 041041E2 		sub	r1, r1, #4
 603              	.LBB141:
 604              	.LBB136:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 605              		.loc 1 87 0
 606 00f8 287083E5 		str	r7, [r3, #40]
 607              	.LVL51:
 608              	.LBE136:
 609              	.LBE141:
 610              	.LBB142:
 611              	.LBB143:
 612              		.loc 1 97 0
 613 00fc 3060C3E5 		strb	r6, [r3, #48]
 614              	.LVL52:
 615              	.LBE143:
 616              	.LBE142:
 140:apps/hello_world/main.c **** 	fb_putstr("vadimbetman",framebuffer->width-4);
 617              		.loc 2 140 0
 618 0100 58009FE5 		ldr	r0, .L22+20
 619 0104 FEFFFFEB 		bl	fb_putstr
 620              	.LVL53:
 621              	.LBB144:
 622              	.LBB145:
  76:include/fb/framebuffer.h **** 	framebuffer->flush();
 623              		.loc 1 76 0
 624 0108 003095E5 		ldr	r3, [r5]
 625 010c 1CC093E5 		ldr	ip, [r3, #28]
 626 0110 0FE0A0E1 		mov	lr, pc
 627 0114 1CFF2FE1 		bx	ip
 628              	.LVL54:
 629              	.LBE145:
 630              	.LBE144:
 154:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 631              		.loc 2 154 0
 632 0118 44109FE5 		ldr	r1, .L22+24
 633 011c 0A00A0E3 		mov	r0, #10
 634 0120 FEFFFFEB 		bl	sercomm_register_rx_cb
 635              	.LVL55:
 155:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 636              		.loc 2 155 0
 637 0124 3C109FE5 		ldr	r1, .L22+28
 638 0128 0500A0E3 		mov	r0, #5
 639 012c FEFFFFEB 		bl	sercomm_register_rx_cb
 640              	.LVL56:
 157:apps/hello_world/main.c **** 	osmo_timer_schedule(&write_battery_info_timer,100);
 641              		.loc 2 157 0
 642 0130 040084E2 		add	r0, r4, #4
 643 0134 6410A0E3 		mov	r1, #100
 644 0138 FEFFFFEB 		bl	osmo_timer_schedule
 645              	.LVL57:
 160:apps/hello_world/main.c **** 	puts("entering interrupt loop\n");
 646              		.loc 2 160 0
 647 013c 28009FE5 		ldr	r0, .L22+32
 648 0140 FEFFFFEB 		bl	puts
 649              	.LVL58:
 650              	.L21:
 162:apps/hello_world/main.c **** 		osmo_timers_update();
 651              		.loc 2 162 0 discriminator 1
 652 0144 FEFFFFEB 		bl	osmo_timers_update
 653              	.LVL59:
 654 0148 FDFFFFEA 		b	.L21
 655              	.L23:
 656              		.align	2
 657              	.L22:
 658 014c 00000000 		.word	.LANCHOR0
 659 0150 72000000 		.word	.LC8
 660 0154 00000000 		.word	framebuffer
 661 0158 00000000 		.word	key_handler
 662 015c B5000000 		.word	.LC9
 663 0160 C2000000 		.word	.LC10
 664 0164 00000000 		.word	console_rx_cb
 665 0168 00000000 		.word	l1a_l23_rx_cb
 666 016c CE000000 		.word	.LC11
 667              		.cfi_endproc
 668              	.LFE64:
 670              		.global	hr
 671              		.section	.rodata.str1.1,"aMS",%progbits,1
 672              	.LC0:
 673 0000 6C31615F 		.ascii	"l1a_l23_rx_cb: \000"
 673      6C32335F 
 673      72785F63 
 673      623A2000 
 674              	.LC1:
 675 0010 25303278 		.ascii	"%02x \000"
 675      2000
 676              	.LC2:
 677 0016 0A00     		.ascii	"\012\000"
 678              	.LC3:
 679 0018 4D657373 		.ascii	"Message for unknown DLCI %u\012\000"
 679      61676520 
 679      666F7220 
 679      756E6B6E 
 679      6F776E20 
 680              	.LC4:
 681 0035 4D657373 		.ascii	"Message on console DLCI: '%s'\012\000"
 681      61676520 
 681      6F6E2063 
 681      6F6E736F 
 681      6C652044 
 682              	.LC5:
 683 0054 423A2025 		.ascii	"B: %04d mV\000"
 683      30346420 
 683      6D5600
 684              	.LC6:
 685 005f 433A2025 		.ascii	"C: %04d mV\000"
 685      30346420 
 685      6D5600
 686              	.LC7:
 687 006a 463A2025 		.ascii	"F: %08x\000"
 687      30387800 
 688              	.LC8:
 689 0072 0A0A5641 		.ascii	"\012\012VADIMBETMAN Hello World (revision osmocon_v"
 689      44494D42 
 689      45544D41 
 689      4E204865 
 689      6C6C6F20 
 690 009f 302E302E 		.ascii	"0.0.0-1766-g9ec3f72)\012\000"
 690      302D3137 
 690      36362D67 
 690      39656333 
 690      66373229 
 691              	.LC9:
 692 00b5 48656C6C 		.ascii	"Hello World!\000"
 692      6F20576F 
 692      726C6421 
 692      00
 693              	.LC10:
 694 00c2 76616469 		.ascii	"vadimbetman\000"
 694      6D626574 
 694      6D616E00 
 695              	.LC11:
 696 00ce 656E7465 		.ascii	"entering interrupt loop\012\000"
 696      72696E67 
 696      20696E74 
 696      65727275 
 696      7074206C 
 697              	.LC12:
 698 00e7 3D3D3D3D 		.ascii	"==================================================="
 698      3D3D3D3D 
 698      3D3D3D3D 
 698      3D3D3D3D 
 698      3D3D3D3D 
 699 011a 3D3D3D3D 		.ascii	"===================\012\000"
 699      3D3D3D3D 
 699      3D3D3D3D 
 699      3D3D3D3D 
 699      3D3D3D0A 
 700              		.data
 701              		.align	2
 702              		.set	.LANCHOR0,. + 0
 705              	hr:
 706 0000 E7000000 		.word	.LC12
 709              	write_battery_info_timer:
 710 0004 00000000 		.space	16
 710      00000000 
 710      00000000 
 710      00000000 
 711 0014 00000000 		.word	write_battery_info
 712 0018 04000000 		.word	write_battery_info_timer
 713              		.text
 714              	.Letext0:
 715              		.file 3 "/opt/arm/install/arm-none-eabi/sys-include/stdint.h"
 716              		.file 4 "/opt/arm/install/lib/gcc/arm-none-eabi/4.8.2/include/stddef.h"
 717              		.file 5 "include/keypad.h"
 718              		.file 6 "../../shared/libosmocore/include/osmocom/core/linuxlist.h"
 719              		.file 7 "../../shared/libosmocore/include/osmocom/core/msgb.h"
 720              		.file 8 "include/comm/sercomm.h"
 721              		.file 9 "include/comm/timer.h"
 722              		.file 10 "include/fb/font.h"
 723              		.file 11 "include/battery/battery.h"
 724              		.file 12 "include/stdio.h"
 725              		.file 13 "include/board.h"
 726              		.file 14 "include/calypso/misc.h"
 727              		.file 15 "include/calypso/clock.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccj8BPqx.s:17     .text.fb_putstr:00000000 $a
     /tmp/ccj8BPqx.s:19     .text.fb_putstr:00000000 fb_putstr
     /tmp/ccj8BPqx.s:46     .text.fb_putstr:00000020 $d
     /tmp/ccj8BPqx.s:51     .text.key_handler:00000000 $a
     /tmp/ccj8BPqx.s:54     .text.key_handler:00000000 key_handler
     /tmp/ccj8BPqx.s:69     .text.l1a_l23_rx_cb:00000000 $a
     /tmp/ccj8BPqx.s:71     .text.l1a_l23_rx_cb:00000000 l1a_l23_rx_cb
     /tmp/ccj8BPqx.s:125    .text.l1a_l23_rx_cb:00000048 $d
     /tmp/ccj8BPqx.s:132    .text.console_rx_cb:00000000 $a
     /tmp/ccj8BPqx.s:134    .text.console_rx_cb:00000000 console_rx_cb
     /tmp/ccj8BPqx.s:189    .text.console_rx_cb:00000040 $d
     /tmp/ccj8BPqx.s:195    .text.write_battery_info:00000000 $a
     /tmp/ccj8BPqx.s:198    .text.write_battery_info:00000000 write_battery_info
     /tmp/ccj8BPqx.s:370    .text.write_battery_info:000000f0 $d
     /tmp/ccj8BPqx.s:379    .text.startup.main:00000000 $a
     /tmp/ccj8BPqx.s:382    .text.startup.main:00000000 main
     /tmp/ccj8BPqx.s:658    .text.startup.main:0000014c $d
     /tmp/ccj8BPqx.s:705    .data:00000000 hr
     /tmp/ccj8BPqx.s:701    .data:00000000 $d
     /tmp/ccj8BPqx.s:709    .data:00000004 write_battery_info_timer
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
framebuffer
puts
printf
msgb_free
snprintf
osmo_timer_schedule
battery_info
board_init
dump_dev_id
calypso_clk_dump
keypad_set_handler
sercomm_register_rx_cb
osmo_timers_update
